# =================================================================================
#
#		ccmm - https://www.foxhollow.cc/projects/ccmm/
#
#	  Connection Church Media Manager, aka ccmm, is a tool for managing all
#   aspects of produced media- initial import from removable media,
#   synchronization with clients and automatic data replication and backup
#
#		Copyright (c) 2024 Steve Cross <flip@foxhollow.cc>
#
#		Licensed under the Apache License, Version 2.0 (the "License");
#		you may not use this file except in compliance with the License.
#		You may obtain a copy of the License at
#
#		     http://www.apache.org/licenses/LICENSE-2.0
#
#		Unless required by applicable law or agreed to in writing, software
#		distributed under the License is distributed on an "AS IS" BASIS,
#		WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#		See the License for the specific language governing permissions and
#		limitations under the License.
#
# =================================================================================

## This is the configuration file for ccmm importer. Any values not provided will
## use the defaults

# The directory to which auto-imported media should be copied
#   default: ./uploads/
live_data_dir: /Users/flip/test

# Log levels:
#   -4 DEBUG
#    0 INFO
#    4 WARN
#    8 ERROR
#  default: 0
log_level: -4

# When running in server mode (such as the systemd service), 
# the local address to bind to
#   default: 127.0.0.1
listen_address: 127.0.0.1

# local port to bind to when running as server
#   default: 7273
listen_port: 7273

# if set, ALL import commands issued, regardless of automatic or one-off, 
# will be forced to dry-run only
#   default: false
force_dry_run: false

# if set to true, any media inserted will NOT be automatically mounted, 
# imported, etc. essentially, the insertion will be ignored completely
#   default: false
disable_auto_processing: false

# List of processors to enable. Empty (or no) array means enable all
enabled_processors:
  - behringerX32 # For importing stereo audio recordings created by a Behringer X32
  - behringerXLIVE # For importing multi-track audio recordings created by a Behringer X-Live card
  - blackmagicIOS # For importing video recordings created by the Blackmagic IOS camera app
  - canonEOS # For importing video and photos created by a Canon EOS camera (at least a 60D, not testing on any other yet)
  - canonXA # For importing video created by a Canon XA series camcorder, recording in MXF mode (only tested on XA70)
  - jackRecorder # For importing multi-track wav files created by the fox-recorder
  - zoomH6 # For importing multi-track wav files created by the Zoom H6 field recorder

##
## Embedded localsend server configuration
##


localsend:
  # The alias to use when advertising this localsend instance on the network
  #   defaults: system hostname
  # alias:

  # The path to where files received from localsend should be placed
  #   default ./uploads/
  storage_path: ./uploads/

  # If true, the sender alias will be appended to the stoage path when receiving files.
  # this is intended to help ensure that identically named files won't be overwritten
  # coming from mutiple devices, as well as to provide a source name for the importer
  # when it runs
  #   default: true
  append_sender_alias: true

  # Interface to bind to
  #   defaults: 0.0.0.0
  listen_address: 0.0.0.0

  # TCP port to listen on for incoming localsend connections
  #   default: 53317
  listen_port: 53317

  # Address to send localsend UDP multicast to
  #   default: 224.0.0.167
  udp_broadcast_address: 224.0.0.167

  # Port to send and listen for multicast messages on
  #   default: 53317
  udp_broadcast_port: 53317

  # This is a case-insensitive list of aliases that are allowed to upload 
  # to localsend. Either list off individual aliases, or create only one 
  # with the name of "__ALL__" in order to allow all devices to send
  #   default: ["__ALL__"]
  allowed_aliases:
    - __ALL__

  # if specified, this password will be required in order to accept files
  # an empty value means no password is required
  #   default: no password required
  require_password: ""